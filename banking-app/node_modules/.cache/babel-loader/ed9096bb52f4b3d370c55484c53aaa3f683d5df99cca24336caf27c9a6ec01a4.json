{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nghia\\\\Desktop\\\\Learning Web Coding\\\\banking-application\\\\src\\\\store\\\\AuthProvider.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport AuthContext from \"./auth-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthProvider = props => {\n  _s();\n  const [currentLogin, setCurrentLogin] = useState({});\n  const [accounts, setAccounts] = useState([]);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(() => {\n    console.log(\"use effect ran\");\n    fetch(\"http://localhost:1337/api/accounts\").then(res => {\n      return res.json();\n    }).then(data => {\n      const accountsFetched = data.data;\n      console.log(accountsFetched);\n      setAccounts(accountsFetched);\n    });\n  }, []);\n  const signupHandler = (firstName, lastName, email, password) => {\n    setAccounts(prevState => [...prevState, {\n      firstName: firstName,\n      lastName: lastName,\n      email: email,\n      password: password,\n      money: 0,\n      transaction: []\n    }]);\n  };\n  const loginHandler = (email, password) => {\n    console.log(accounts);\n    if (accounts.length === 0) alert(\"Account not found!\");\n    for (let i = 0; i < accounts.length; i++) {\n      if (accounts[i].email === email && accounts[i].password === password) {\n        setIsLoggedIn(true);\n        setCurrentLogin(accounts[i]);\n        break;\n      }\n    }\n  };\n  const logoutHandler = () => {\n    setIsLoggedIn(false);\n    setCurrentLogin({});\n  };\n  const deposit = (amount, activity) => {\n    currentLogin.money += parseInt(amount);\n    currentLogin.transaction = [activity, ...currentLogin.transaction];\n    setCurrentLogin(currentLogin);\n  };\n  const withdrawal = (amount, activity) => {\n    currentLogin.money -= parseInt(amount);\n    currentLogin.transaction = [activity, ...currentLogin.transaction];\n    setCurrentLogin(currentLogin);\n  };\n  const authContext = {\n    users: accounts,\n    isLoggedIn: isLoggedIn,\n    currentLogin: currentLogin,\n    onLogout: logoutHandler,\n    onLogin: loginHandler,\n    onSignup: signupHandler,\n    onDeposit: deposit,\n    onWithdrawal: withdrawal\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: authContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"ri+DbZKkBgplrdf9n6USUzpcAM0=\");\n_c = AuthProvider;\nexport default AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["useEffect","useState","AuthContext","jsxDEV","_jsxDEV","AuthProvider","props","_s","currentLogin","setCurrentLogin","accounts","setAccounts","isLoggedIn","setIsLoggedIn","console","log","fetch","then","res","json","data","accountsFetched","signupHandler","firstName","lastName","email","password","prevState","money","transaction","loginHandler","length","alert","i","logoutHandler","deposit","amount","activity","parseInt","withdrawal","authContext","users","onLogout","onLogin","onSignup","onDeposit","onWithdrawal","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/nghia/Desktop/Learning Web Coding/banking-application/src/store/AuthProvider.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport AuthContext from \"./auth-context\";\r\n\r\nconst AuthProvider = (props) => {\r\n  const [currentLogin, setCurrentLogin] = useState({});\r\n  const [accounts, setAccounts] = useState([]);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n  useEffect(() => {\r\n    console.log(\"use effect ran\");\r\n    fetch(\"http://localhost:1337/api/accounts\")\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        const accountsFetched = data.data;\r\n        console.log(accountsFetched);\r\n        setAccounts(accountsFetched);\r\n      });\r\n  }, []);\r\n\r\n  const signupHandler = (firstName, lastName, email, password) => {\r\n    setAccounts((prevState) => [\r\n      ...prevState,\r\n      {\r\n        firstName: firstName,\r\n        lastName: lastName,\r\n        email: email,\r\n        password: password,\r\n        money: 0,\r\n        transaction: [],\r\n      },\r\n    ]);\r\n  };\r\n\r\n  const loginHandler = (email, password) => {\r\n    console.log(accounts);\r\n    if (accounts.length === 0) alert(\"Account not found!\");\r\n\r\n    for (let i = 0; i < accounts.length; i++) {\r\n      if (accounts[i].email === email && accounts[i].password === password) {\r\n        setIsLoggedIn(true);\r\n        setCurrentLogin(accounts[i]);\r\n        break;\r\n      }\r\n    }\r\n  };\r\n\r\n  const logoutHandler = () => {\r\n    setIsLoggedIn(false);\r\n    setCurrentLogin({});\r\n  };\r\n\r\n  const deposit = (amount, activity) => {\r\n    currentLogin.money += parseInt(amount);\r\n    currentLogin.transaction = [activity, ...currentLogin.transaction];\r\n    setCurrentLogin(currentLogin);\r\n  };\r\n\r\n  const withdrawal = (amount, activity) => {\r\n    currentLogin.money -= parseInt(amount);\r\n    currentLogin.transaction = [activity, ...currentLogin.transaction];\r\n    setCurrentLogin(currentLogin);\r\n  };\r\n\r\n  const authContext = {\r\n    users: accounts,\r\n    isLoggedIn: isLoggedIn,\r\n    currentLogin: currentLogin,\r\n    onLogout: logoutHandler,\r\n    onLogin: loginHandler,\r\n    onSignup: signupHandler,\r\n    onDeposit: deposit,\r\n    onWithdrawal: withdrawal,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={authContext}>\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthProvider;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}