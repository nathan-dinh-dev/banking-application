{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nghia\\\\Desktop\\\\Learning Web Coding\\\\banking-application\\\\src\\\\store\\\\AuthProvider.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport AuthContext from \"./auth-context\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthProvider = props => {\n  _s();\n  // const navigate = useNavigate();\n  const [currentLogin, setCurrentLogin] = useState({});\n  const [accounts, setAccounts] = useState([]);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const signupHandler = (firstName, lastName, email, password) => {\n    setAccounts(prevState => [...prevState, {\n      firstName: firstName,\n      lastName: lastName,\n      email: email,\n      password: password,\n      money: 0,\n      transaction: []\n    }]);\n  };\n\n  // useEffect(() => {\n  //   if (isLoggedIn) navigate(\"/dashboard\");\n  // }, [isLoggedIn]);\n\n  const loginHandler = (email, password) => {\n    console.log(accounts);\n    if (accounts.length === 0) alert(\"Account not found!\");\n    for (let i = 0; i < accounts.length; i++) {\n      if (accounts[i].email === email && accounts[i].password === password) {\n        setIsLoggedIn(true);\n        setCurrentLogin(accounts[i]);\n        break;\n      }\n    }\n  };\n  const logoutHandler = () => {\n    setIsLoggedIn(false);\n    setCurrentLogin({});\n  };\n  const deposit = amount => {\n    setCurrentLogin(prevState => {\n      return {\n        ...prevState,\n        money: parseInt(prevState.money) + parseInt(amount)\n      };\n    });\n  };\n  const withdrawal = amount => {\n    setCurrentLogin(prevState => {\n      return {\n        ...prevState,\n        money: parseInt(prevState.money) - parseInt(amount)\n      };\n    });\n  };\n  const transaction = activity => {\n    setCurrentLogin(prevState => {\n      return {\n        ...prevState,\n        transaction: [activity, ...prevState.transaction]\n      };\n    });\n  };\n  const authContext = {\n    users: accounts,\n    isLoggedIn: isLoggedIn,\n    currentLogin: currentLogin,\n    onLogout: logoutHandler,\n    onLogin: loginHandler,\n    onSignup: signupHandler,\n    onDeposit: deposit,\n    onWithdrawal: withdrawal,\n    onTransaction: transaction\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: authContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"v5W9+1271zF13q+sqtwGRTPDUCs=\");\n_c = AuthProvider;\nexport default AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["useState","useEffect","AuthContext","useNavigate","jsxDEV","_jsxDEV","AuthProvider","props","_s","currentLogin","setCurrentLogin","accounts","setAccounts","isLoggedIn","setIsLoggedIn","signupHandler","firstName","lastName","email","password","prevState","money","transaction","loginHandler","console","log","length","alert","i","logoutHandler","deposit","amount","parseInt","withdrawal","activity","authContext","users","onLogout","onLogin","onSignup","onDeposit","onWithdrawal","onTransaction","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/nghia/Desktop/Learning Web Coding/banking-application/src/store/AuthProvider.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport AuthContext from \"./auth-context\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst AuthProvider = (props) => {\r\n  // const navigate = useNavigate();\r\n  const [currentLogin, setCurrentLogin] = useState({});\r\n  const [accounts, setAccounts] = useState([]);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n  const signupHandler = (firstName, lastName, email, password) => {\r\n    setAccounts((prevState) => [\r\n      ...prevState,\r\n      {\r\n        firstName: firstName,\r\n        lastName: lastName,\r\n        email: email,\r\n        password: password,\r\n        money: 0,\r\n        transaction: [],\r\n      },\r\n    ]);\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   if (isLoggedIn) navigate(\"/dashboard\");\r\n  // }, [isLoggedIn]);\r\n\r\n  const loginHandler = (email, password) => {\r\n    console.log(accounts);\r\n    if (accounts.length === 0) alert(\"Account not found!\");\r\n\r\n    for (let i = 0; i < accounts.length; i++) {\r\n      if (accounts[i].email === email && accounts[i].password === password) {\r\n        setIsLoggedIn(true);\r\n        setCurrentLogin(accounts[i]);\r\n        break;\r\n      }\r\n    }\r\n  };\r\n\r\n  const logoutHandler = () => {\r\n    setIsLoggedIn(false);\r\n    setCurrentLogin({});\r\n  };\r\n\r\n  const deposit = (amount) => {\r\n    setCurrentLogin((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        money: parseInt(prevState.money) + parseInt(amount),\r\n      };\r\n    });\r\n  };\r\n\r\n  const withdrawal = (amount) => {\r\n    setCurrentLogin((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        money: parseInt(prevState.money) - parseInt(amount),\r\n      };\r\n    });\r\n  };\r\n\r\n  const transaction = (activity) => {\r\n    setCurrentLogin((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        transaction: [activity, ...prevState.transaction],\r\n      };\r\n    });\r\n  };\r\n\r\n  const authContext = {\r\n    users: accounts,\r\n    isLoggedIn: isLoggedIn,\r\n    currentLogin: currentLogin,\r\n    onLogout: logoutHandler,\r\n    onLogin: loginHandler,\r\n    onSignup: signupHandler,\r\n    onDeposit: deposit,\r\n    onWithdrawal: withdrawal,\r\n    onTransaction: transaction,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={authContext}>\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthProvider;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}