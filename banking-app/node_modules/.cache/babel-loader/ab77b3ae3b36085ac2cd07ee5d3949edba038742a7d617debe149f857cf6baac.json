{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nghia\\\\Desktop\\\\Learning Web Coding\\\\banking-application\\\\src\\\\store\\\\AuthProvider.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport AuthContext from \"./auth-context\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthProvider = props => {\n  _s();\n  const navigate = useNavigate();\n  const [accounts, setAccounts] = useState([]);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const signupHandler = (firstName, lastName, email, password) => {\n    setAccounts(prevState => [...prevState, {\n      firstName: firstName,\n      lastName: lastName,\n      email: email,\n      password: password\n    }]);\n  };\n  useEffect(() => {\n    if (isLoggedIn) navigate(\"/dashboard\");\n  }, [isLoggedIn]);\n  const loginHandler = (email, password) => {\n    console.log(accounts);\n    if (accounts.length === 0) alert(\"Account not found!\");\n    for (let i = 0; i < accounts.length; i++) {\n      if (accounts[i].email === email && accounts[i].password === password) {\n        setIsLoggedIn(true);\n        break;\n      }\n    }\n  };\n  const authContext = {\n    users: accounts,\n    isLoggedIn: isLoggedIn,\n    onLogout: () => {},\n    onLogin: loginHandler,\n    onSignup: signupHandler\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: authContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"ujzwfao31Bd/p9wrceEs0JYBLz0=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport default AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["useState","useEffect","AuthContext","useNavigate","jsxDEV","_jsxDEV","AuthProvider","props","_s","navigate","accounts","setAccounts","isLoggedIn","setIsLoggedIn","signupHandler","firstName","lastName","email","password","prevState","loginHandler","console","log","length","alert","i","authContext","users","onLogout","onLogin","onSignup","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/nghia/Desktop/Learning Web Coding/banking-application/src/store/AuthProvider.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport AuthContext from \"./auth-context\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst AuthProvider = (props) => {\r\n  const navigate = useNavigate();\r\n\r\n  const [accounts, setAccounts] = useState([]);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n  const signupHandler = (firstName, lastName, email, password) => {\r\n    setAccounts((prevState) => [\r\n      ...prevState,\r\n      {\r\n        firstName: firstName,\r\n        lastName: lastName,\r\n        email: email,\r\n        password: password,\r\n      },\r\n    ]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isLoggedIn) navigate(\"/dashboard\");\r\n  }, [isLoggedIn]);\r\n\r\n  const loginHandler = (email, password) => {\r\n    console.log(accounts);\r\n    if (accounts.length === 0) alert(\"Account not found!\");\r\n\r\n    for (let i = 0; i < accounts.length; i++) {\r\n      if (accounts[i].email === email && accounts[i].password === password) {\r\n        setIsLoggedIn(true);\r\n        break;\r\n      }\r\n    }\r\n  };\r\n\r\n  const authContext = {\r\n    users: accounts,\r\n    isLoggedIn: isLoggedIn,\r\n    onLogout: () => {},\r\n    onLogin: loginHandler,\r\n    onSignup: signupHandler,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={authContext}>\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthProvider;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,WAAW,MAAM,gBAAgB;AACxC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,YAAY,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC9B,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAE9B,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMc,aAAa,GAAGA,CAACC,SAAS,EAAEC,QAAQ,EAAEC,KAAK,EAAEC,QAAQ,KAAK;IAC9DP,WAAW,CAAEQ,SAAS,IAAK,CACzB,GAAGA,SAAS,EACZ;MACEJ,SAAS,EAAEA,SAAS;MACpBC,QAAQ,EAAEA,QAAQ;MAClBC,KAAK,EAAEA,KAAK;MACZC,QAAQ,EAAEA;IACZ,CAAC,CACF,CAAC;EACJ,CAAC;EAEDjB,SAAS,CAAC,MAAM;IACd,IAAIW,UAAU,EAAEH,QAAQ,CAAC,YAAY,CAAC;EACxC,CAAC,EAAE,CAACG,UAAU,CAAC,CAAC;EAEhB,MAAMQ,YAAY,GAAGA,CAACH,KAAK,EAAEC,QAAQ,KAAK;IACxCG,OAAO,CAACC,GAAG,CAACZ,QAAQ,CAAC;IACrB,IAAIA,QAAQ,CAACa,MAAM,KAAK,CAAC,EAAEC,KAAK,CAAC,oBAAoB,CAAC;IAEtD,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGf,QAAQ,CAACa,MAAM,EAAEE,CAAC,EAAE,EAAE;MACxC,IAAIf,QAAQ,CAACe,CAAC,CAAC,CAACR,KAAK,KAAKA,KAAK,IAAIP,QAAQ,CAACe,CAAC,CAAC,CAACP,QAAQ,KAAKA,QAAQ,EAAE;QACpEL,aAAa,CAAC,IAAI,CAAC;QACnB;MACF;IACF;EACF,CAAC;EAED,MAAMa,WAAW,GAAG;IAClBC,KAAK,EAAEjB,QAAQ;IACfE,UAAU,EAAEA,UAAU;IACtBgB,QAAQ,EAAEA,CAAA,KAAM,CAAC,CAAC;IAClBC,OAAO,EAAET,YAAY;IACrBU,QAAQ,EAAEhB;EACZ,CAAC;EAED,oBACET,OAAA,CAACH,WAAW,CAAC6B,QAAQ;IAACC,KAAK,EAAEN,WAAY;IAAAO,QAAA,EACtC1B,KAAK,CAAC0B;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAE3B,CAAC;AAAC7B,EAAA,CA/CIF,YAAY;EAAA,QACCH,WAAW;AAAA;AAAAmC,EAAA,GADxBhC,YAAY;AAiDlB,eAAeA,YAAY;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}